{"ast":null,"code":"var _jsxFileName = \"/Users/nataliewagner/Documents/Development/natwebsite/natwebsite/src/app/navbar/navbar.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Typography } from '@material-ui/core';\nimport './navbar.css';\n/**\n * Navbar Class\n * In case I want to cry over muicss dropdowns instead of my own, better-behaved\n * implementation: https://www.muicss.com/docs/v1/react/dropdowns\n * Or Boostrap's dropdown, even tho I'm using MUI framework:\n * https://react-bootstrap.github.io/components/dropdowns/\n * onHover event DNE in React https://upmostly.com/tutorials/react-onhover-event-handling-with-examples\n */\n\nclass Navbar extends Component {\n  /**\n   * Navbar constructor\n   */\n  constructor() {\n    super();\n    this.dropdownClass = 'navbar-dropdown';\n  }\n  /**\n   * Navigate to selected page\n   * @param {string} page path of the page to navigate to\n   */\n\n\n  navigateTo(page) {\n    window.location.href = page;\n  }\n  /**\n   * Open the dropdown for a menu item\n   * @param {React.element} ul html list of dropdown items\n   */\n\n\n  openDropdown(ul) {\n    ReactDOM.render(ul, document.getElementById('navbar-secondary'));\n  }\n  /**\n   * Close the dropdown for a menu item\n   * NOTE: If i want to add the timeout back because it looks nice, consider the bug:\n   * if i hover over button X, move off it then get back on it before the timeout ends,\n   * then the dropdown will not reappear.\n   * Also, consider using component state to handle whether the dropdown is open:\n   * https://reactjs.org/docs/handling-events.html\n   * @param {Event} event\n   */\n\n\n  closeDropdown(event) {\n    // info on nativeEvent found here https://reactjs.org/docs/events.html\n    // .contains does not like when i use this.dropdownClass instead of 'navbar-dropdown'\n    if (!event.nativeEvent.toElement.classList.contains('navbar-dropdown')) {\n      // setTimeout(() => {\n      // NOTE: All elements & children related to the dropdown must have the 'navbar-dropdown'\n      // class for this to work (ie div, ul, li, a)\n      ReactDOM.unmountComponentAtNode(document.getElementById('navbar-secondary')); // }, 200);\n    }\n  }\n  /**\n   * Render the Navbar component\n   * @returns {ReactElement}\n   */\n\n\n  render() {\n    let ulClassList = 'navbar-dropdown mui-dropdown__menu mui--is-open'; // let linksDropdown = (\n    //   <ul className={ulClassList} style={{top: '39.5px'}}>\n    //     <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n    //       <a href=\"mylinks.html\" className={this.dropdownClass}>My Links</a>\n    //     </li>\n    //     <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n    //       <a href=\"blmlinks.html\" className={this.dropdownClass}>BLM Links</a>\n    //     </li>\n    //   </ul>\n    // );\n\n    let blmDropdown = /*#__PURE__*/React.createElement(\"ul\", {\n      className: ulClassList,\n      style: {\n        top: '39.5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: this.dropdownClass,\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"blm-info.html\",\n      className: this.dropdownClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Info\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: this.dropdownClass,\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"blm-petitions.html\",\n      className: this.dropdownClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Petitions\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: this.dropdownClass,\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"blm-donate.html\",\n      className: this.dropdownClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Donate\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-title-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      id: \"navbar-title\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"NATALIE WAGNER\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      onClick: () => this.navigateTo('index.html'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      onClick: () => this.navigateTo('resume.html'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Resume\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      href: 'mailto:nat82alie@gmail.com',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Email Me\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      className: this.dropdownClass,\n      onClick: () => this.navigateTo('blm.html'),\n      onMouseEnter: () => this.openDropdown(blmDropdown),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"BLM\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-secondary\",\n      className: `${this.dropdownClass} mui-dropdown MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit`,\n      style: {\n        display: 'block',\n        padding: '0px',\n        borderWidth: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/nataliewagner/Documents/Development/natwebsite/natwebsite/src/app/navbar/navbar.js"],"names":["React","Component","ReactDOM","Button","Typography","Navbar","constructor","dropdownClass","navigateTo","page","window","location","href","openDropdown","ul","render","document","getElementById","closeDropdown","event","nativeEvent","toElement","classList","contains","unmountComponentAtNode","ulClassList","blmDropdown","top","backgroundColor","display","padding","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Typography } from '@material-ui/core';\nimport './navbar.css';\n\n/**\n * Navbar Class\n * In case I want to cry over muicss dropdowns instead of my own, better-behaved\n * implementation: https://www.muicss.com/docs/v1/react/dropdowns\n * Or Boostrap's dropdown, even tho I'm using MUI framework:\n * https://react-bootstrap.github.io/components/dropdowns/\n * onHover event DNE in React https://upmostly.com/tutorials/react-onhover-event-handling-with-examples\n */\nclass Navbar extends Component {\n  /**\n   * Navbar constructor\n   */\n  constructor() {\n    super();\n    this.dropdownClass = 'navbar-dropdown';\n  }\n  \n  /**\n   * Navigate to selected page\n   * @param {string} page path of the page to navigate to\n   */\n  navigateTo(page) {\n    window.location.href = page;\n  }\n\n  /**\n   * Open the dropdown for a menu item\n   * @param {React.element} ul html list of dropdown items\n   */\n  openDropdown(ul) {\n    ReactDOM.render(ul, document.getElementById('navbar-secondary'));\n  }\n\n  /**\n   * Close the dropdown for a menu item\n   * NOTE: If i want to add the timeout back because it looks nice, consider the bug:\n   * if i hover over button X, move off it then get back on it before the timeout ends,\n   * then the dropdown will not reappear.\n   * Also, consider using component state to handle whether the dropdown is open:\n   * https://reactjs.org/docs/handling-events.html\n   * @param {Event} event\n   */\n  closeDropdown(event) {\n    // info on nativeEvent found here https://reactjs.org/docs/events.html\n    // .contains does not like when i use this.dropdownClass instead of 'navbar-dropdown'\n    if (!event.nativeEvent.toElement.classList.contains('navbar-dropdown')) {\n      // setTimeout(() => {\n        // NOTE: All elements & children related to the dropdown must have the 'navbar-dropdown'\n        // class for this to work (ie div, ul, li, a)\n        ReactDOM.unmountComponentAtNode(document.getElementById('navbar-secondary'));\n      // }, 200);\n    }\n  }\n\n  /**\n   * Render the Navbar component\n   * @returns {ReactElement}\n   */\n  render() {\n    let ulClassList = 'navbar-dropdown mui-dropdown__menu mui--is-open';\n\n    // let linksDropdown = (\n    //   <ul className={ulClassList} style={{top: '39.5px'}}>\n    //     <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n    //       <a href=\"mylinks.html\" className={this.dropdownClass}>My Links</a>\n    //     </li>\n    //     <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n    //       <a href=\"blmlinks.html\" className={this.dropdownClass}>BLM Links</a>\n    //     </li>\n    //   </ul>\n    // );\n\n    let blmDropdown = (\n      <ul className={ulClassList} style={{top: '39.5px'}}>\n        <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n          <a href=\"blm-info.html\" className={this.dropdownClass}>Info</a>\n        </li>\n        <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n          <a href=\"blm-petitions.html\" className={this.dropdownClass}>Petitions</a>\n        </li>\n        <li className={this.dropdownClass} style={{backgroundColor: 'indianred'}}>\n          <a href=\"blm-donate.html\" className={this.dropdownClass}>Donate</a>\n        </li>\n      </ul>\n    );\n\n    return (\n      <div id=\"navbar-container\">\n        <div id=\"navbar-title-container\">\n          <Typography id=\"navbar-title\" variant=\"h2\">\n            NATALIE WAGNER\n          </Typography>\n        </div>\n        <div id=\"navbar-buttons-container\">\n          <Button color=\"inherit\" onClick={() => this.navigateTo('index.html')}>\n            Home\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => this.navigateTo('resume.html')}>\n            Resume\n          </Button>\n\n          {/* <Button color=\"inherit\" className={this.dropdownClass}\n            onClick={() => this.navigateTo('links.html')}\n            onMouseEnter={() => this.openDropdown(linksDropdown)}\n            onMouseLeave={this.closeDropdown}>\n            Links\n          </Button> */}\n\n          {/* <Button color=\"inherit\" onClick={() => this.navigateTo('emailnatalie.html')}>\n            Email Me\n          </Button> */}\n\n          <Button color=\"inherit\" href={'mailto:nat82alie@gmail.com'}>\n            Email Me\n          </Button>\n\n          <Button color=\"inherit\" className={this.dropdownClass}\n            onClick={() => this.navigateTo('blm.html')}\n            onMouseEnter={() => this.openDropdown(blmDropdown)}>\n            BLM\n          </Button>\n            {/* onMouseLeave={this.closeDropdown} */}\n\n          <div id=\"navbar-secondary\"\n            className={`${this.dropdownClass} mui-dropdown MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit`}\n            style={{display: 'block', padding: '0px', borderWidth: '0px'}}>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}