{"ast":null,"code":"var _jsxFileName = \"/Users/nataliewagner/Documents/Development/natwebsite/natwebsite/src/app/navbar/navbar.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Typography } from '@material-ui/core';\nimport './navbar.css';\n/**\n * Navbar Class\n * In case I want to cry over muicss dropdowns instead of my own, better-behaved\n * implementation: https://www.muicss.com/docs/v1/react/dropdowns\n * Or Boostrap's dropdown, even tho I'm using MUI framework:\n * https://react-bootstrap.github.io/components/dropdowns/\n */\n\nclass Navbar extends Component {\n  /**\n   * Navigate to selected page\n   * @param {string} page path of the page to navigate to\n   */\n  navigateTo(page) {\n    window.location.href = page;\n  }\n  /**\n   * Opens the dropdown for a menu item\n   * @param {React.element} ul html list of dropdown items\n   */\n\n\n  openDropdown(ul) {\n    ReactDOM.render(ul, document.getElementById('navbar-secondary'));\n  }\n  /**\n   * Closes the dropdown for a menu item\n   * \n   * NOTE:\n   * All elements & children related to the dropdown must have the 'navbar-dropdown'\n   * class for this to work (ie div, ul, li, a)\n   * \n   * ALSO NOTE:\n   * If i want to add the timeout back because it looks nice, consider the bug:\n   * if i hover over button X, move off it then get back on it before the timeout ends,\n   * then the dropdown will not reappear.\n   * Also, consider using component state to handle whether the dropdown is open:\n   * https://reactjs.org/docs/handling-events.html\n   * @param {Event} event\n   */\n\n\n  closeDropdown(event) {\n    // info on nativeEvent found here https://reactjs.org/docs/events.html\n    if (!event.nativeEvent.toElement.classList.contains('navbar-dropdown')) {\n      // setTimeout(() => {\n      ReactDOM.unmountComponentAtNode(document.getElementById('navbar-secondary')); // }, 200);\n    }\n  }\n  /**\n   * Render the Navbar component\n   */\n\n\n  render() {\n    let linksUL = /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navbar-dropdown mui-dropdown__menu mui--is-open\",\n      style: {\n        top: '39.5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"navbar-dropdown\",\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"links.html\",\n      className: \"navbar-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"My Links\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"navbar-dropdown\",\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"links.html\",\n      className: \"navbar-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"BLM Links\")));\n    let fakeUL = /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navbar-dropdown mui-dropdown__menu mui--is-open\",\n      style: {\n        top: '39.5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"navbar-dropdown\",\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"links.html\",\n      className: \"navbar-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Fake 1\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"navbar-dropdown\",\n      style: {\n        backgroundColor: 'indianred'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"links.html\",\n      className: \"navbar-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Fake 2\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-title-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      id: \"navbar-title\",\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"NATALIE WAGNER\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      onClick: () => this.navigateTo('index.html'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      className: \"navbar-dropdown\",\n      onMouseEnter: () => this.openDropdown(linksUL),\n      onMouseLeave: e => this.closeDropdown(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Links\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      onClick: () => this.navigateTo('emailnatalie.html'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Email Me\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      className: \"navbar-dropdown\",\n      onMouseEnter: () => this.openDropdown(fakeUL),\n      onMouseLeave: e => this.closeDropdown(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Fake\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar-secondary\",\n      onMouseLeave: e => this.closeDropdown(e),\n      className: \"navbar-dropdown mui-dropdown MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit\",\n      style: {\n        display: 'block',\n        padding: '0px',\n        borderWidth: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/nataliewagner/Documents/Development/natwebsite/natwebsite/src/app/navbar/navbar.js"],"names":["React","Component","ReactDOM","Button","Typography","Navbar","navigateTo","page","window","location","href","openDropdown","ul","render","document","getElementById","closeDropdown","event","nativeEvent","toElement","classList","contains","unmountComponentAtNode","linksUL","top","backgroundColor","fakeUL","e","display","padding","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Typography } from '@material-ui/core';\nimport './navbar.css';\n\n/**\n * Navbar Class\n * In case I want to cry over muicss dropdowns instead of my own, better-behaved\n * implementation: https://www.muicss.com/docs/v1/react/dropdowns\n * Or Boostrap's dropdown, even tho I'm using MUI framework:\n * https://react-bootstrap.github.io/components/dropdowns/\n */\nclass Navbar extends Component {\n  /**\n   * Navigate to selected page\n   * @param {string} page path of the page to navigate to\n   */\n  navigateTo(page) {\n    window.location.href = page;\n  }\n\n  /**\n   * Opens the dropdown for a menu item\n   * @param {React.element} ul html list of dropdown items\n   */\n  openDropdown(ul) {\n    ReactDOM.render(ul, document.getElementById('navbar-secondary'));\n  }\n\n  /**\n   * Closes the dropdown for a menu item\n   * \n   * NOTE:\n   * All elements & children related to the dropdown must have the 'navbar-dropdown'\n   * class for this to work (ie div, ul, li, a)\n   * \n   * ALSO NOTE:\n   * If i want to add the timeout back because it looks nice, consider the bug:\n   * if i hover over button X, move off it then get back on it before the timeout ends,\n   * then the dropdown will not reappear.\n   * Also, consider using component state to handle whether the dropdown is open:\n   * https://reactjs.org/docs/handling-events.html\n   * @param {Event} event\n   */\n  closeDropdown(event) {\n    // info on nativeEvent found here https://reactjs.org/docs/events.html\n    if (!event.nativeEvent.toElement.classList.contains('navbar-dropdown')) {\n      // setTimeout(() => {\n        ReactDOM.unmountComponentAtNode(document.getElementById('navbar-secondary'));\n      // }, 200);\n    }\n  }\n\n  /**\n   * Render the Navbar component\n   */\n  render() {\n    let linksUL = (\n      <ul className=\"navbar-dropdown mui-dropdown__menu mui--is-open\" style={{top: '39.5px'}}>\n        <li className=\"navbar-dropdown\" style={{backgroundColor: 'indianred'}}>\n          <a href=\"links.html\" className=\"navbar-dropdown\">My Links</a>\n        </li>\n        <li className=\"navbar-dropdown\" style={{backgroundColor: 'indianred'}}>\n          <a href=\"links.html\" className=\"navbar-dropdown\">BLM Links</a>\n        </li>\n      </ul>\n    );\n\n    let fakeUL = (\n      <ul className=\"navbar-dropdown mui-dropdown__menu mui--is-open\" style={{top: '39.5px'}}>\n        <li className=\"navbar-dropdown\" style={{backgroundColor: 'indianred'}}>\n          <a href=\"links.html\" className=\"navbar-dropdown\">Fake 1</a>\n        </li>\n        <li className=\"navbar-dropdown\" style={{backgroundColor: 'indianred'}}>\n          <a href=\"links.html\" className=\"navbar-dropdown\">Fake 2</a>\n        </li>\n      </ul>\n    );\n\n    return (\n      <div id=\"navbar-container\">\n        <div id=\"navbar-title-container\">\n          <Typography id=\"navbar-title\" variant=\"h2\">\n            NATALIE WAGNER\n          </Typography>\n        </div>\n        <div id=\"navbar-buttons-container\">\n          <Button color=\"inherit\" onClick={() => this.navigateTo('index.html')}>\n            Home\n          </Button>\n\n          <Button color=\"inherit\" className=\"navbar-dropdown\"\n            onMouseEnter={() => this.openDropdown(linksUL)}\n            onMouseLeave={(e) => this.closeDropdown(e)}>\n            Links\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => this.navigateTo('emailnatalie.html')}>\n            Email Me\n          </Button>\n\n          {/* break */}\n\n          <Button color=\"inherit\" className=\"navbar-dropdown\"\n            onMouseEnter={() => this.openDropdown(fakeUL)}\n            onMouseLeave={(e) => this.closeDropdown(e)}>\n            Fake\n          </Button>\n\n          <div id=\"navbar-secondary\"\n            onMouseLeave={(e) => this.closeDropdown(e)}\n            className=\"navbar-dropdown mui-dropdown MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit\"\n            style={{display: 'block', padding: '0px', borderWidth: '0px'}}>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}